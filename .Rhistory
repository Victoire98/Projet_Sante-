ylab = "New cases")
lines(t+2018,exp(fit+2*se.fit),
lty = 2)
lines(t+2018,exp(fit-2*se.fit), lty = 2)
table_predict <-round(cbind(Pred_values =exp(fit),
LL=exp(fit+2*se.fit),
UL =exp(fit-2*se.fit)), digits = 0)
row.names(table_predict) <- 2019:2048# t+2018
table_predict
#mquasi
predict.quasi <-predict(mquasi_0,data.frame(year = t+2018,
age = new.age,
sexe = new.sexe), se.fit = TRUE)
fit <- predict.quasi$fit
fit
se.fit <- predict.quasi$se.fit
#
cbind(exp(fit),exp(se.fit))
plot(t+2018,exp(fit),
xlab = "Years",
ylab = "New cases")
lines(t+2018,exp(fit+2*se.fit), lty = 2)
lines(t+2018,exp(fit-2*se.fit), lty = 2)
#mquasi
predict.quasi <-predict(mquasi,data.frame(year = t+2018,
age = new.age,
sexe = new.sexe), se.fit = TRUE)
plot(t+2018,exp(fit),
xlab = "Years",
ylab = "New cases")
lines(t+2018,exp(fit+2*se.fit), lty = 2)
lines(t+2018,exp(fit-2*se.fit), lty = 2)
predict.quasi <-predict(mquasi,data.frame(year = t+2018,
age = new.age,
sexe = new.sexe), se.fit = TRUE)
fit <- predict.quasi$fit
fit
se.fit <- predict.quasi$se.fit
plot(t+2018,exp(fit),
xlab = "Years",
ylab = "New cases")
lines(t+2018,exp(fit+2*se.fit), lty = 2)
lines(t+2018,exp(fit-2*se.fit), lty = 2)
#mquasi
predict.quasi <-predict(mquasi_0,data.frame(year = t+2018,
age = new.age,
sexe = new.sexe), se.fit = TRUE)
fit <- predict.quasi$fit
se.fit <- predict.quasi$se.fit
plot(t+2018,exp(fit),
xlab = "Years",
ylab = "New cases")
lines(t+2018,exp(fit+2*se.fit), lty = 2)
lines(t+2018,exp(fit-2*se.fit), lty = 2)
knitr::opts_chunk$set(echo = TRUE)
library(survival)
#la plus adaptée
data("leukemia")
View(leukemia)
plot(survfit(Surv(time) ~ status, data = leukemia), lty = 2:3, col = 2:3)
legend(80, 0.8, c("ag absent", "ag present"), lty = 2:3, col = 2:3)
help("survival")
gehan <- read.csv('gehan.csv')
summary(gehan)
#temps de survie et temp de censure (0 et 1)
s.gehan <- survfit(Surv(time,cens) - 1, data = gehan)
#temps de survie et temp de censure (0 et 1)
s.gehan <- survfit(Surv(time,cens) ~ 1, data = gehan)
s.gehan
summary(s.gehan)
plot(s.gehan,
mark.time = T,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de survie",
main = "Courbe de survie globale",
col="red")
plot(s.gehan,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de survie",
main = "Courbe de survie globale",
col="red")
plot(s.gehan,
mark.time = *,
plot(s.gehan,
mark.time = -,
plot(s.gehan,
mark.time = '-',
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de survie",
main = "Courbe de survie globale",
col="red")
plot(s.gehan,
mark.time = 9,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de survie",
main = "Courbe de survie globale",
col="red")
plot(s.gehan,
mark.time = 1,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de survie",
main = "Courbe de survie globale",
col="red")
plot(s.gehan,
mark.time = 10,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de survie",
main = "Courbe de survie globale",
col="red")
plot(s.gehan,
mark.time = T,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de survie",
main = "Courbe de survie globale",
col="red")
#groupes
s.gehan.gr <- survfit(Surv(time-cens) ~ treat, data = gehan)
s.gehan.gr
#groupes
s.gehan.gr <- survfit(Surv(time,cens) ~ treat, data = gehan)
s.gehan.gr
summary(s.gehan.gr)
#comparer deux courves de survie
survdiff(Surv(time,cens) ~ treat,data = gehan)
plot(s.gehan.gr,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de  survie",
main = "Courbes de survie",
lty = c(1,2))
legend(25,1, legend = c("6-MP","Placebo"),lty = c(1,2))
text(15,0.5,c="p = 4.17e-05")
plot(s.gehan.gr,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de  survie",
main = "Courbes de survie",
lty = c(1,2))
legend(25,1, legend = c("6-MP","Placebo"),lty = c(1,2))
text(15,0.5,c("p = 4.17e-05"))
plot(s.gehan.gr,
xlab = "Durée de rémission en semaines",
ylab = "Probabilité de  survie",
main = "Courbes de survie",
lty = c(1,2))
legend(25,1, legend = c("6-MP","Placebo"),lty = c(1,2))
text(30,0.1,c("p = 4.17e-05"))
knitr::opts_chunk$set(echo = TRUE)
library(survival)
data(lung)
head(lung)
lung$ex <- factor(lung$ex, levels = c(1,2),
labels = c("Male","Female"))
lung$sex <- factor(lung$sex, levels = c(1,2),
labels = c("Male","Female"))
str(lung)
m <- coxph(Surv(time,cens) ~ age, data = lung)
m <- coxph(Surv(time,status) ~ age, data = lung)
summary(m)
knitr::opts_chunk$set(echo = TRUE)
setwd("/home/camila/Documents/3eme-annee/Data R/")
corona <- read.csv("corona.csv")
head(corona)
str(corona)
corona$Date <- as.Date(corona$Date)
corona$Date <- as.Date.character(corona$Date)
corona$Date
corona <- read.csv("corona.csv",sep = ",")
head(corona)
str(corona)
corona <- read.table("corona.csv",sep = ",")
head(corona)
str(corona)
View(corona)
corona <- read.csv("corona.csv")
str(corona)
corona$Date[1]
as.Date(corona$Date[1])
corona$Date <-strptime(corona$Date,"%m/%d/%y %h:%m:%s")
corona$Last.Update <- strptime(corona$Last.Update,"%m/%d/%y %h:%m:%s")
#on verifie la structure
str(corona)
corona$Date <-strptime(corona$Date,"%m/%d/%Y %h:%M:%S")
corona$Last.Update <- strptime(corona$Last.Update,"%m/%d/%y %h:%M:%S")
#on verifie la structure
str(corona)
corona <- read.csv("corona.csv")
corona$Date <-strptime(corona$Date,"%m/%d/%Y %h:%M:%S")
corona$Last.Update <- strptime(corona$Last.Update,"%m/%d/%y %h:%M:%S")
#on verifie la structure
str(corona)
corona <- read.csv("corona.csv")
str(corona)
corona$Date <-strptime(corona$Date,"%m/%d/%Y %H:%M:%S")
corona$Last.Update <- strptime(corona$Last.Update,"%m/%d/%y %H:%M:%S")
#on verifie la structure
str(corona)
corona <- read.csv("corona.csv")
corona$Date <-strptime(corona$Date,"%m/%d/%Y %H:%M:%S")
corona$Last.Update <- strptime(corona$Last.Update,"%m/%d/%Y %H:%M:%S")
#on verifie la structure
str(corona)
corona$Confirmed <- as.integer(corona$Confirmed)
#change hong
corona$Country[corona$Country == "Mainland China"] <- "China"
str(corona)
incidence_chine <- corona[corona$Country == "China"]
incidence_chine <- corona[corona$Country == "China",]
print(dim(incidence_chine))
corona_chine<- corona[corona$Country == "China",]
print(dim(corona_chine))
#new dataset
incidence_chine <- data.frame(date = corona_chine$Date,
cases = corona_chine$Confirmed)
head(incidence_chine)
incidence_chine <- dplyr::arrange(incidence_chine,date)
incidence_chine <- aggregate(incidence_chine["cases"],
by=incidence_chine["date"],
sum)
str(corona)
head(incidence_chine)
par(mar = c(5,5,2,5))
plot(incidence_chine$date,incidence_chine$cases, type = "b",
xlab = "Week", ylab = "Incidence")
par(new = T)
plot(incidence_chine$date,
incidence_chine$cases,
type = "l", col="red",
axes = FALSE, xlab = NA, ylab = NA,log="y")
axis(side = 4)
mtext(side = 4, line = 4, "Cumulative ")
legend("topleft", legend = c("Cases","Cumulative"),
lyt = c(1,1), pch=c(1,NA), col=c("black","red"))
par(mar = c(5,5,2,5))
plot(incidence_chine$date,incidence_chine$cases, type = "b",
xlab = "Week", ylab = "Incidence")
par(new = T)
plot(incidence_chine$date,
incidence_chine$cases,
type = "l", col="red",
axes = FALSE, xlab = NA, ylab = NA,log="y")
axis(side = 4)
mtext(side = 4, line = 4, "Cumulative ")
legend("topleft", legend = c("Cases","Cumulative"),
lty = c(1,1), pch=c(1,NA), col=c("black","red"))
par(mar = c(5,5,2,5))
plot(incidence_chine$date,incidence_chine$cases, type = "b",
xlab = "Week", ylab = "Incidence")
par(new = T)
plot(incidence_chine$date,
incidence_chine$cases,
type = "l", col="red",
axes = FALSE, xlab = NA, ylab = NA,log="y")
axis(side = 4)
mtext(side = 4, line = 4, "Cumulative ")
legend("topleft", legend = c("Cases","Cumulative"),
lty = c(1,1), pch=c(1,NA), col=c("black","red"))
par(mar = c(5,5,2,5))
plot(incidence_chine$date,incidence_chine$cases, type = "b",
xlab = "Week", ylab = "Incidence")
par(new = T)
plot(incidence_chine$date,
incidence_chine$cases,
type = "l", col="red",
axes = FALSE, xlab = NA, ylab = NA,log="y")
axis(side = 4)
mtext(side = 4, line = 4, "Cumulative ")
legend("topleft", legend = c("Cases","Cumulative"),
lty = c(1,1), pch=c(1,NA), col=c("black","red"))
Infected <- incidence_chine$cases
Day <- 1:(length(Infected))
N <- 1400000000 #pop in china, 140mil
#trois cas dans le modele
sirmod <- function(t,y,parms){
#trois vector
S = y[1]
I = y[2]
R = y[3]
#definir
beta = parms["beta"]
mu = parms["mu"]
gamma = parms["gamma"]
N = parms["N"]
#l'ensemble d'equations
dS = mu * (N - S) - beta *S*I/N
dI = beta * S *I/N - (mu + gamma) * I
dR = gamma * I -mu * R
res = c(dS,dI,dR)
#return comme une liste
list(res)
}
times < seq(0,25,by = 1) #length date?
times <- seq(0,25,by = 1) #length date?
parms <- c(mu = 0,N = 1,beta = 2, gamma = 1/2)
start <- c(S = 0.999, I = 0.001, R = 0)
library(deSolve)
install.packages(deSolve)
install.packages("deSolve")
#install.packages("deSOlve")
library(deSolve)
out <- ode(y = start, times = times, func =  sirmod,parms =parms)
out <- as.data.frame(out)
head(round(out))
start
#trois cas dans le modele
sirmod <- function(t,y,parms){
#trois vector
S = y[1]
I = y[2]
R = y[3]
#definir
beta = parms["beta"]
mu = parms["mu"]
gamma = parms["gamma"]
N = parms["N"]
#l'ensemble d'equations
dS = mu * (N - S) - beta * S * I/N
dI = beta * S * I/N - (mu + gamma) * I
dR = gamma * I -mu * R
res = c(dS,dI,dR)
#return comme une liste
list(res)
}
times <- seq(0,25,by = 1) #length date?
parms <- c(mu = 0,N = 1,beta = 2, gamma = 1/2)
start <- c(S = 0.999, I = 0.001, R = 0
out <- ode(y = start, times = times, func =  sirmod,parms =parms)
#params sim
times <- seq(0,25,by = 1) #length date?
parms <- c(mu = 0,N = 1,beta = 2, gamma = 1/2)
start <- c(S = 0.999, I = 0.001, R = 0)
out <- ode(y = start, times = times, func =  sirmod,parms =parms)
out <- as.data.frame(out)
head(round(out))
head((out))
plot(out$time,out$S)
plot(out$time,out$S)
plot(out$time,out$I)
plot(out$time,out$R)
path = "~/Documents/3eme-annee/Data R/Projet_Sante-/"
setwd(path)
load("dataset.Rdata")
str(data)
data.stats <- data
data.stats$output <- (substring(names(data[,6:31]),first = 11)[max.col(data[,6:31])])
data.stats[,6:31] <- NULL
data.stats$output <- as.factor(data.stats$output)
summary(data.stats)
data.stats$case_num <- NULL
summary(data.stats)
data.stats$prod1 <- as.factor(data.stats$prod1)
data.stats$prod2 <- as.factor(data.stats$prod2)
summary(data.stats)
path = "~/Documents/3eme-annee/Data R/Projet_Sante-/"
setwd(path)
load("dataset.Rdata")
str(data)
summary(data.stats)
plot(data.stats$age)
hist(data.stats$age)
hist(data.stats$age, main = "Histogram age",
xlab = "Age")
aggregate(data.stats["age"], by=data.stats["trmt_date"], mean)
plot(aggregate(data.stats["age"], by=data.stats["trmt_date"], mean))
age.mean <- aggregate(data.stats["age"],by=data.stats["trmt_date"], mean)
age.mean <- aggregate(data.stats["age"],by=data.stats["trmt_date"], mean)
age.min <- aggregate(data.stats["age"],by=data.stats["trmt_date"], min)
hist(data.stats$age, main = "Histogram age",
xlab = "Age")
plot(age.mean,type="l")
plot(age.max,type="l",col = "dark red")
age.mean <- aggregate(data.stats["age"],by=data.stats["trmt_date"], mean)
age.min <- aggregate(data.stats["age"],by=data.stats["trmt_date"], min)
age.max <- aggregate(data.stats["age"],by=data.stats["trmt_date"], max)
plot(age.mean,type="l")
plot(age.max,type="l",col = "dark red")
plot(age.min,type="l",col = "dark blue")
plot(age.mean,type="l")
lines(age.max,type="l",col = "dark red")
lines(age.min,type="l",col = "dark blue")
plot(age.mean,type="l")
lines(age.max,col = "dark red")
lines(age.min,col = "dark blue")
plot(age.mean,type="l")
points(age.max,col = "dark red")
plot(age.mean,type="l")
points(age.max,col = "dark red")
age.min
age.max
points(age.max,col = "dark red")
plot(age.max,col = "dark red")
plot(age.mean,type="l")
par(new=TRUE)
plot(age.max,col = "dark red")
aga.max[,1]
age.max[,1]
age.max[,2]
years <- format(data.stats$trmt_date, "%Y")
tapply(data$age, years, mean)
years <- format(data.stats$trmt_date, "%Y")
tapply(data$age, years, max)
months <- format(data.stats$trmt_date, "%M")
tapply(data$age, months, max)
months <- format(data.stats$trmt_date, "%m")
tapply(data$age, months, max)
View(data.stats)
View(data.stats)
years <- format(data.stats$trmt_date, "%Y-%m")
months <- format(data.stats$trmt_date, "%m")
tapply(data$age, years, max)
plot( tapply(data$age, years, max))
months <- format(data.stats$trmt_date, "%m")
age.max <- tapply(data$age, years, max)
years
plot(age.max,col = "dark red")
age.mean <- aggregate(data.stats["age"],by=data.stats["trmt_date"], mean)
age.min <- aggregate(data.stats["age"],by=data.stats["trmt_date"], min)
age.max <- aggregate(data.stats["age"],by=data.stats["trmt_date"], max)
months <- format(data.stats$trmt_date, "%Y-%m")
age.min <- aggregate(data.stats["age"],by=months, min)
age.min <- aggregate(data.stats["age"],by=list(months), min)
View(age.min)
View(age.min)
summary(data.stats$age)
summary(data.stats$age)
hist(data.stats$age, main = "Histogram age",
xlab = "Age")
months <- format(data.stats$trmt_date, "%Y-%m")
age.mean <- aggregate(data.stats["age"],by=list(months), mean)
age.min <- aggregate(data.stats["age"],by=by=list(months), min)
age.min <- aggregate(data.stats["age"],by=list(months), min)
age.max <- aggregate(data.stats["age"],by=list(months), max)
plot(age.mean,type="l")
age.max
plot(age.mean[,1],age.mean[,2],type="l")
age.mean[,1]
age.mean[,2]
plot(x = age.mean[,1], y = age.mean[,2],type="l")
age.mean <- table(aggregate(data.stats["age"],by=list(months), mean))
age.min <- table(aggregate(data.stats["age"],by=list(months), min))
age.max <- table(aggregate(data.stats["age"],by=list(months), max))
age.max
aggregate(data.stats["age"],by=list(months), mean)
age.mean <- aggregate(data.stats["age"],by=list(months), mean)
age.min <- aggregate(data.stats["age"],by=list(months), min)
age.max <- aggregate(data.stats["age"],by=list(months), max)
plot(age.mean)
plot(age.mean[,1],age.mean[,2])
plot(x = age.mean[,1], y = age.mean[,2])
View(age.mean)
View(age.min)
View(age.max)
View(age.max)
type(age.max)
str(age.max)
plot(x = age.mean$Group.1, y = age.mean$age)
plot(age.mean$Group.1, age.mean$age)
boxplot(age.max)
plot.ts(age.max)
is.na(age.max)
plot.ts(age.max,ylim = range(age.max$age))
plot(age.max,ylim = range(age.max$age))
age.max$Group.1 <- as.Date(age.max$Group.1)
age.max$Group.1 <- as.Date(age.max$Group.1,format = "%Y-%m")
plot(age.max,ylim = range(age.max$age))
plot(age.max)
plot(age.max$age)
plot(age.max$Group.1)
plot(x=age.max$Group.1,y=age.max$age)
plot(=age.max$age)
plot(age.max$age)
age.mean <- aggregate(data.stats["age"],by=list(months), mean)
age.min <- aggregate(data.stats["age"],by=list(months), min)
age.max <- aggregate(data.stats["age"],by=list(months), max)
plot(age.mean[,2],type="l")
lines(age.max[,2],col = "dark red")
plot(age.max$age)
plot(age.mean[,2],type="l")
lines(age.max[,2],col = "dark red")
plot(age.mean[,2],type="l", ylim = c(age.mean$age,age.max$age))
plot(age.mean[,2],type="l", ylim = c(0,150))
lines(age.max[,2],col = "dark red")
plot(age.mean[,2],type="l", ylim = c(0,150))
lines(age.max[,2],col = "dark red")
lines(age.min[,2],col = "dark blue")
age.mean <- aggregate(data.stats["age"],by=data.stats["trmt_date"], mean)
age.min <- aggregate(data.stats["age"],by=data.stats["trmt_date"], min)
age.max <- aggregate(data.stats["age"],by=data.stats["trmt_date"], max)
plot(age.mean[,2],type="l", ylim = c(0,150))
lines(age.max[,2],col = "dark red")
lines(age.min[,2],col = "dark blue")
age.mean <- aggregate(data.stats["age"],by=list(months), mean)
age.min <- aggregate(data.stats["age"],by=list(months), min)
age.max <- aggregate(data.stats["age"],by=list(months), max)
plot(age.mean[,2],type="l", ylim = c(0,150))
lines(age.max[,2],col = "dark red")
lines(age.min[,2],col = "dark blue")
aggregate(data.stats$output,by=list(months), count)
aggregate(data.stats$output,by=list(months), summary())
aggregate(data.stats$output,by=list(months), summary
)
aggregate(data.stats$output,by=data.stats$age, summary)
plot(aggregate(data.stats$output,by=data.stats$age, summary))
plot(aggregate(data.stats$output,by=list(months), summary))
bus<-aggregate(data.stats$output,by=data.stats$age, summary)
bus<-(aggregate(data.stats$output,by=list(months), summary))
bus
View(bus)
View(bus)
bus<-aggregate(data.stats["output"],by=list(months), summary)
View(bus)
View(bus)
bus<-as.data.frame(aggregate(data.stats["output"],by=list(months), summary))
(aggregate(data.stats["output"],by=list(months), summary))
